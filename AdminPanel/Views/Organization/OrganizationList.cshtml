@using Syncfusion.EJ2
@addTagHelper *, Syncfusion.EJ2
@{
    ViewData["Title"] = "OrganizationList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}






@{

    List<object> GridCommands = new List<object>();

    GridCommands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit btnEdit", cssClass = "e-flat" } });

    GridCommands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete btnDelete", cssClass = "e-flat" } });

}


@{
    string o = TempData["Output"] as string;
    bool showToast = !string.IsNullOrEmpty(o);
    string toastClass = string.Empty;

    if (showToast)
    {
       
        if (o.Contains("Error"))
        {
            toastClass = "bg-danger";
        }else
        {
            toastClass = "bg-success";
        }
    }
}

<style>
    .bg-success {
        background-color: #28a745 !important;
        color: white;
    }


    .bg-danger {
        background-color: #dc3545 !important;
        color: white;
    }
</style>



@if (showToast)
{
    <ejs-toast id="element" cssClass="@toastClass" content="@o"></ejs-toast>
}


<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h4 class="p-2 m-0">
                Organization List
            </h4>
        </div>
    </div>
</div>




<div id="Dilog" class="w-25 "></div>
<div class="container-fluid mt-1 ">
    
    @* //dataSource="@ViewBag.OrgData" *@
    <ejs-grid id="Grid" dataSource="@ViewBag.OrgData" allowSorting="true" allowPaging="true" allowResizing="true" allowFiltering="true" allowExcelExport="true" toolbar="@(new List<string>() {"Search","CustomButton"  })">
        <e-grid-editsettings></e-grid-editsettings>
        <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
        <e-grid-pageSettings pageSize="5" pageSizes="@(new string[] { "5", "10" ,"12","15","20", "All" })" />
        <e-grid-columns>
            <e-grid-column headerText="Option" width="105" commands="GridCommands"></e-grid-column>
            <e-grid-column field="SYS_CODE" visible=false isPrimaryKey="true" headerText="Id" textAlign="Right" width="105"></e-grid-column>
            <e-grid-column field="Organization_Code" headerText="Organization Code"  width="200"></e-grid-column>
            <e-grid-column field="Organization_Name" headerText=" Organizaion Name" width="200"></e-grid-column>
            <e-grid-column field="Telephone_No" width="150" headerText="Telephone_No " allowFiltering="false"></e-grid-column>
            <e-grid-column field="Email" width="150" headerText="Email"allowFiltering="false" filter="false"></e-grid-column>
            <e-grid-column field="Address" width="200" headerText="Address" allowFiltering="false"></e-grid-column>
            <e-grid-column field="CityId" width="200" headerText="City" allowFiltering="false"></e-grid-column>
            <e-grid-column field="StateId" width="200" headerText="State" allowFiltering="false"></e-grid-column>
            <e-grid-column field="CountryId" width="200" headerText="Country" allowFiltering="false"></e-grid-column>
            <e-grid-column field="is_Air" headerText="isAir" width="200" allowFiltering="false"></e-grid-column>
            <e-grid-column field="is_Ocean" headerText="isOcean" width="200" allowFiltering="false"></e-grid-column>
            <e-grid-column field="is_Land" headerText="isLand" width="200" allowFiltering="false"></e-grid-column>
            <e-grid-column field="Status" width="130" headerText="Status" ></e-grid-column>
            <e-grid-column field="Sys_Created_On" width="200" headerText="CreatedOn" allowFiltering="false"></e-grid-column>
            <e-grid-column field="Sys_Created_By" width="130" headerText="Created By" allowFiltering="false"></e-grid-column>
            @* <e-grid-column field="Sys_Updated_On" width="200" headerText="Updated On" allowFiltering="false"></e-grid-column>
            <e-grid-column field="Sys_Updated_By" width="130" headerText="Updated By" allowFiltering="false"></e-grid-column> *@
            <e-grid-column field="Logo" headerText="Logo" width="150" allowFiltering="false"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>

</div>


<script>


    //For Toaster---
    document.addEventListener('DOMContentLoaded', function () {
        var showToast = @showToast.ToString().ToLower();

        if (showToast) {
            var toastObj = document.getElementById('element').ej2_instances[0];

            // Set the toaster position to top-right
            toastObj.position = {
                X: 'Right',
                Y: 'Top'
            };

            toastObj.show();
        }
    });


   
    var id;
   
    
    $(document).ready(function () {
        
        var spanElement = $('<span class="e-btn-icon e-add e-icons e-icon-left "></span>');

        $(".e-tbar-btn-text").text("Add New");

        $("#Grid_CustomButton").prepend(spanElement);
      

        $("#Grid_CustomButton").on("click", function () {
            
            
            // Call your function here
            window.location.href = '@Url.Action("Index", "Organization")';
        });
    });

    // Handle Edit and Delete
    function handleEditCommand(rowData) {
   
        // Example: Implement logic to handle edit command
        var grid = document.getElementById("Grid").ej2_instances[0];
        var data = grid.getRowObjectFromUID(rowData).data;
        console.log("Edit command clicked", data.Sys_Code);
        var EditId = data.Sys_Code;
        if (EditId>0 || EditId!=null ) {
            // alert("enter")
            window.location.href = '@Url.Action("Index", "Organization")' + '?Code=' + EditId;
        }
    

    //     $.ajax({
    //         "url": '@Url.Action("GetOrgData_ById", "Organization")',
    //         method: "GET",
    //         data: { EditID: EditId },
    //         dataType: 'json',
    //         success: function (data) {
    //             console.log(data.redirectUrl);
                
    //             var redirectUrlWithId = data.redirectUrl + '?id=' + EditId;
    //             window.location.href = redirectUrlWithId;

    //         },
    //         error: function (err) {
    //             console.log("error: " + err)
    //         }

    //     })
     }

    //delete Functionality sss---------------------------------

    var dialog = new ej.popups.Dialog({
        header: 'Confirm Delete',
        content: '<div>Are you sure you want to delete this record?</div>',
        buttons: [
            { buttonModel: { content: 'Yes', isPrimary: true }, click: onYesButtonClick, id: 'confirmDelete' },
            { buttonModel: { content: 'No' }, click: onNoButtonClick, id: 'cancelDelete' }
        ]

    });
   

    

    function clearDialogDiv() {
        var dialogDiv = document.getElementById("Dilog");
        if (dialogDiv) {
            while (dialogDiv.firstChild) {
                dialogDiv.removeChild(dialogDiv.firstChild);
            }
        }
    }


    function onNoButtonClick() {
        dialog.hide()
        clearDialogDiv();
        var popup = document.getElementById('Dilog');
        console.log(popup);
        var popupElement = popup.querySelector('w-25.e-control.e-popup.e-popup-.e-dialog');
        console.log(popupElement);
        if (popupElement) {
            alert("ggg");
            popup.removeChild(popupElement);
        }
    }

    function onYesButtonClick() {
        
        clearDialogDiv();
        console.log("Yes button clicked", id)

        if (id > 0) {
            $.ajax({
                "url": '@Url.Action("Delete", "Organization")',
                method: "GET",
                data: { Code: id },
                dataType: 'json',
                success: function (data) {
                    console.log(data);
                    if (data = true) {
                        window.location.reload();
                    }

                },
                error: function (err) {
                    console.log("error: " + err)
                }

            })
        }
        id = 0;
        //Call Delete Ajax
        id = 0;

        var grid = document.getElementById('Grid').ej2_instances[0];
        grid.refresh();
       
    }




    function handleDeleteCommand(rowData) {
        clearDialogDiv();
        var grid = document.getElementById("Grid").ej2_instances[0];
        dialog.appendTo('#Dilog');
       
        var data = grid.getRowObjectFromUID(rowData).data;
        console.log("Delete command clicked", data.Sys_Code);
        id = data.Sys_Code;
        console.log(id);
        if (dialog) {
            dialog.show(); // Show the dialog
        }

    }


    
    //Event when user Click On Edit or Delete Option Starts
    document.body.addEventListener("click", function (event) {
        var target = event.target;
        if (target.classList.contains("e-editbutton") || target.classList.contains("btnEdit")) {
           
            var rowData = target.closest("tr").getAttribute("data-uid");
            console.log(rowData);
           
            handleEditCommand(rowData);
        } else if (target.classList.contains("e-deletebutton") || target.classList.contains("btnDelete")) {
           
            var rowData = target.closest("tr").getAttribute("data-uid");
            handleDeleteCommand(rowData);
        }
    });




    // document.addEventListener('DOMContentLoaded', function () {
    //     // Get reference to the search input field
    //     var searchInput = document.querySelector('.e-input');

    //     // Function to reload the page
    //     function reloadPage() {
    //         location.reload();
    //     }

    //     // Event listener for changes in the search input
    //     searchInput.addEventListener('input', function () {
    //         // Check if the search input is empty
    //         if (searchInput.value.trim() === '') {
    //             // If empty, reload the page
    //             alert("jjjj")

    //             GetOrgData();
    //         }
    //     });
    // });


    // function GetOrgData()
    // {

    //     $.ajax({
    //         url: '@Url.Action("GetOrganizationList", "Organization")',
    //         type: 'GET',
    //        // data: { skip: (page - 1) * pagesize, take: pagesize },
    //         dataType: 'json',
    //         success: function (data) {
    //             if (data != null) {
    //                 var grid = document.getElementById('Grid').ej2_instances[0];
    //                 console.log(data);
    //                 console.log(grid);
                   
    //                 var Binddata = data;
    //                 //var grid = $('#Grid').data('ejGrid');
    //                 console.log("bindadata"+ Binddata)
    //                 grid.dataSource = [];
    //                 grid.dataSource = Binddata;
    //                 // grid.dataSource = Binddata;
    //                  grid.dataBind();
    //             }

    //             // Bind data to the grid

    //         },
    //         error: function (xhr, status, error) {
    //             console.error('Request failed with status:', status);
    //         }
    //     })
    // }
    


       
    </script>
    


   
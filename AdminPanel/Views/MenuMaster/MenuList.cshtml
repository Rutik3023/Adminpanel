@model IEnumerable< AdminPanel.Models.MenuMaster>

@{
    ViewData["Title"] = "MenuList";
}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h4 class="p-2 m-0">
                Menu List
            </h4>
        </div>
    </div>
</div>


@{

    List<object> GridCommands = new List<object>();

    GridCommands.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit btnEdit", cssClass = "e-flat" } });

    GridCommands.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete btnDelete", cssClass = "e-flat" } });

}


@{
    string o = TempData["Output"] as string;
    bool showToast = !string.IsNullOrEmpty(o);
    string toastClass = string.Empty;

    if (showToast)
    {
        if (o.Contains("Error"))
        {
            toastClass = "bg-danger";
        }
        else
        {
            toastClass = "bg-success";
        }
    }
}

<style>
    .bg-success {
        background-color: #28a745 !important;
        color: white;
    }


    .bg-danger {
        background-color: #dc3545 !important;
        color: white;
    }
</style>

@* <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> *@

@if (showToast)
{
    <ejs-toast id="element" cssClass="@toastClass" content="@o"></ejs-toast>
}

<div id="Dilog" class="w-25"></div>
<div class="container-fluid mt-2">

    <ejs-grid id="Grid" dataSource="@ViewBag.MenuList" allowSorting="true" allowPaging="true" allowResizing="true" allowExcelExport="true" toolbar="@(new List<string>() {"Search","CustomButton"  })">
        <e-grid-editsettings></e-grid-editsettings>
        <e-grid-pageSettings pageSize="5" pageSizes="true" />
        <e-grid-columns>
            <e-grid-column headerText="Option" width="105" commands="GridCommands"></e-grid-column>
            <e-grid-column field="Code" visible=false isPrimaryKey="true" headerText="Code" textAlign="Right" width="105"></e-grid-column>
            <e-grid-column field="MenuName" width="150" headerText="Name"></e-grid-column>
            <e-grid-column field="MenuDesc" width="150" headerText="Description"></e-grid-column>
            <e-grid-column field="ParentId" width="100" headerText="Parent ID"></e-grid-column>
            <e-grid-column field="MenuUrl" width="150" headerText="Menu Url"></e-grid-column>
            @* <e-grid-column field="MenuIcon" width="100" headerText="Menu Icon"></e-grid-column> *@


            <e-grid-column field="MenuIcon" headerText="Menu Icon" width="150"></e-grid-column>

            <e-grid-column field="MenuSrNo" width="100" headerText="Menu Sr No"></e-grid-column>
            <e-grid-column field="Type" width="100" headerText="Type"></e-grid-column>
            <e-grid-column field="status" width="100" headerText="Status"></e-grid-column>
            @*  <e-grid-column field="CreationDate" width="150" headerText="Creation Date"></e-grid-column>
            <e-grid-column field="CreatedBy" width="100" headerText="Created By"></e-grid-column>
            <e-grid-column field="LastModificationDate" width="180" headerText="Last Modification Date"></e-grid-column>
            <e-grid-column field="LastModifiedBy" width="150" headerText="Last Modified By"></e-grid-column> *@
        </e-grid-columns>
    </ejs-grid>


</div>

<script>



    //For Toaster---
    document.addEventListener('DOMContentLoaded', function () {
        var showToast = @showToast.ToString().ToLower();

        if (showToast) {
            var toastObj = document.getElementById('element').ej2_instances[0];

            // Set the toaster position to top-right
            toastObj.position = {
                X: 'Right',
                Y: 'Top'
            };

            toastObj.show();
        }
    });


    //Add Button--
    $(document).ready(function () {
        var spanElement = $('<span class="e-btn-icon e-add e-icons e-icon-left "></span>');
        $(".e-tbar-btn-text").text("Add New");
        $("#Grid_CustomButton").prepend(spanElement);

        $("#Grid_CustomButton").on("click", function () {
            window.location.href = '@Url.Action("MenuForm", "MenuMaster")';
        });
    });

    // Global variable to store rowUID
    var deleteRowUID;

    // Handle Edit and Delete
    function handleEditCommand(rowUID) {
        var grid = document.getElementById("Grid").ej2_instances[0];
        var data = grid.getRowObjectFromUID(rowUID).data;
        console.log("Edit command clicked", data.Code);
        var EditId = data.Code;
        window.location.href = '@Url.Action("MenuForm", "MenuMaster")' + '?Code=' + EditId;
    }

    var targetElement = document.getElementById('Dilog');
    //Dialog box
    var dialog = new ej.popups.Dialog({
        header: 'Confirm Delete',
        content: '<div>Are you sure you want to delete this record?</div>',
        buttons: [
            { buttonModel: { content: 'Yes', isPrimary: true }, click: onYesButtonClick, id: 'confirmDelete' },
            { buttonModel: { content: 'No' }, click: onNoButtonClick, id: 'cancelDelete' }
        ]
    });

    function clearDialogDiv() {
        var dialogDiv = document.getElementById("Dilog");
        if (dialogDiv) {
            while (dialogDiv.firstChild) {
                dialogDiv.removeChild(dialogDiv.firstChild);
            }
        }
    }
    //A. No Button click
    function onNoButtonClick() {
        dialog.hide();
        clearDialogDiv();
        var popup = document.getElementById('Dilog');
        var popupElement = popup.querySelector('.e-control.e-popup.e-popup-.e-dialog');
        if (popupElement) {
            popup.removeChild(popupElement);
        }
    }

    //B. yes button
    function onYesButtonClick() {
        clearDialogDiv();
        console.log("Yes button clicked");

        var grid = document.getElementById('Grid').ej2_instances[0];
        var data = grid.getRowObjectFromUID(deleteRowUID).data; // Use the global deleteRowUID
        console.log("Delete command confirmed", data.Code);
        var EditId = data.Code;



        var url = '@Url.Action("MenuDelete", "MenuMaster")' + '?Code=' + EditId;
        // console.log("Sending POST request to URL: " + url);

        $.ajax({
            url: url,
            type: 'POST',
            data: JSON.stringify({ Code: EditId }),
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                window.location.reload();
                // console.log("Delete successful");
            },
            error: function (xhr, status, error) {
                console.error("Delete failed: " + error);
                // Handle the error
            }
        });
    }


    function handleDeleteCommand(rowUID) {
        var grid = document.getElementById("Grid").ej2_instances[0];
        deleteRowUID = rowUID; // Store rowUID globally

        dialog.appendTo('#Dilog');
        var data = grid.getRowObjectFromUID(rowUID).data;
        console.log("Delete command clicked", data.Code);
        if (dialog) {
            dialog.show(); // Show the dialog
        }
    }

    // Event when user clicks on Edit or Delete option
    document.body.addEventListener("click", function (event) {
        var target = event.target;
        if (target.classList.contains("e-editbutton") || target.classList.contains("btnEdit")) {
            var rowUID = target.closest("tr").getAttribute("data-uid");
            handleEditCommand(rowUID);
        } else if (target.classList.contains("e-deletebutton") || target.classList.contains("btnDelete")) {
            var rowUID = target.closest("tr").getAttribute("data-uid");
            handleDeleteCommand(rowUID);
        }
    });
</script>

